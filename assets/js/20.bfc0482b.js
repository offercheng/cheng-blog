(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{582:function(e,t,r){"use strict";r.r(t);var s=r(13),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"react-fiber"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-fiber"}},[e._v("#")]),e._v(" React fiber")]),e._v(" "),r("ul",[r("li",[e._v("concurrent 并发模式是一组React 的新功能，可帮助应用保持响应，并根据用户的设备性能和网速进行适当的调整")]),e._v(" "),r("li",[e._v("最关键的一点就是将原来的 "),r("strong",[e._v("同步不可中断的更新")]),e._v(" 变为 "),r("strong",[e._v("可中段异步更新")]),e._v("，"),r("strong",[e._v("同步不可中断的更新")]),e._v("，意味着在更新的过程中，即使产生了更高优先级的更新，原来的更新也会继续，等处理完毕渲染到屏幕上以后才会会开始处理更高的优先级的更新，"),r("strong",[e._v("异步可中段更新")]),e._v("，意味着同样的情况，原来的更新可优先中断，优先处理更高优先级的更新，处理完毕之后才处理原来被中断的更新。")]),e._v(" "),r("li",[e._v("React 采取双缓存的 fiber tree，不仅仅只是为了更急迫的更新可以中段已经开始的渲染，还服务于 Suspense（如何处理捕获的异常），useTransition，useDeferedValue 等新特性")])])])}),[],!1,null,null,null);t.default=n.exports}}]);